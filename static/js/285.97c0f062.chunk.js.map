{"version":3,"file":"static/js/285.97c0f062.chunk.js","mappings":"qRACaA,EAAaC,EAAAA,GAAAA,KAAWC,IAAAA,GAAAC,EAAAA,EAAAA,GAAA,+MAYxBC,EAAeH,EAAAA,GAAAA,OAAaI,IAAAA,GAAAF,EAAAA,EAAAA,GAAA,2TAiB5BG,EAAcL,EAAAA,GAAAA,MAAYM,IAAAA,GAAAJ,EAAAA,EAAAA,GAAA,oIAS1BK,EAAcP,EAAAA,GAAAA,MAAYQ,IAAAA,GAAAN,EAAAA,EAAAA,GAAA,6HAQhBF,EAAAA,GAAAA,GAASS,IAAAA,GAAAP,EAAAA,EAAAA,GAAA,0C,gHCYhC,UAhDiB,WACf,IAAAQ,GAAwBC,EAAAA,EAAAA,UAAS,IAAGC,GAAAC,EAAAA,EAAAA,GAAAH,EAAA,GAA7BI,EAAIF,EAAA,GAAEG,EAAOH,EAAA,GACpBI,GAA0BL,EAAAA,EAAAA,UAAS,IAAGM,GAAAJ,EAAAA,EAAAA,GAAAG,EAAA,GAA/BE,EAAKD,EAAA,GAAEE,EAAQF,EAAA,GACtBG,GAAgCT,EAAAA,EAAAA,UAAS,IAAGU,GAAAR,EAAAA,EAAAA,GAAAO,EAAA,GAArCE,EAAQD,EAAA,GAAEE,EAAWF,EAAA,GACtBG,GAAWC,EAAAA,EAAAA,MAQjB,OACEC,EAAAA,EAAAA,MAAC3B,EAAAA,GAAU,CAAC4B,SARQ,SAAAC,GACpBA,EAAEC,iBACFL,GAASM,EAAAA,EAAAA,IAAS,CAAEhB,KAAAA,EAAMI,MAAAA,EAAOI,SAAAA,KACjCP,EAAQ,IACRI,EAAS,IACTI,EAAY,GACd,EAEsCQ,SAAA,EAClCL,EAAAA,EAAAA,MAACnB,EAAAA,GAAW,CAACyB,QAAQ,OAAMD,SAAA,EACzBE,EAAAA,EAAAA,KAAA,QAAAF,SAAM,WACNE,EAAAA,EAAAA,KAAC5B,EAAAA,GAAW,CACV6B,KAAK,OACLpB,KAAK,OACLqB,MAAOrB,EACPsB,SAAU,SAAAR,GAAC,OAAIb,EAAQa,EAAES,cAAcF,MAAM,QAGjDT,EAAAA,EAAAA,MAACnB,EAAAA,GAAW,CAACyB,QAAQ,QAAOD,SAAA,EAC1BE,EAAAA,EAAAA,KAAA,QAAAF,SAAM,YACNE,EAAAA,EAAAA,KAAC5B,EAAAA,GAAW,CACV6B,KAAK,QACLpB,KAAK,QACLqB,MAAOjB,EACPkB,SAAU,SAAAR,GAAC,OAAIT,EAASS,EAAES,cAAcF,MAAM,QAGlDT,EAAAA,EAAAA,MAACnB,EAAAA,GAAW,CAACyB,QAAQ,WAAUD,SAAA,EAC7BE,EAAAA,EAAAA,KAAA,QAAAF,SAAM,eACNE,EAAAA,EAAAA,KAAC5B,EAAAA,GAAW,CACV6B,KAAK,WACLpB,KAAK,WACLqB,MAAOb,EACPc,SAAU,SAAAR,GAAC,OAAIL,EAAYK,EAAES,cAAcF,MAAM,QAGrDT,EAAAA,EAAAA,MAACvB,EAAAA,GAAY,CAAC+B,KAAK,SAAQH,SAAA,EACzBE,EAAAA,EAAAA,KAACK,EAAAA,IAAa,IAAG,gBAKzB,C","sources":["components/ContactForm/ContactForm.Styled.jsx","pages/Register.jsx"],"sourcesContent":["import styled from 'styled-components';\nexport const FormStyled = styled.form`\n   {\n    display: grid;\n    padding: 20px;\n    border: 1px solid black;\n    border-radius: 5px;\n    width: 400px;\n    margin-left: auto;\n    margin-right: auto;\n    margin-top: 60px;\n  }\n`;\nexport const ButtonStyled = styled.button`\n   {\n    color: black;\n    cursor: pointer;\n    padding: 8px 16px;\n    margin-top: 20px;\n    background-color: white;\n    border-radius: 15px;\n    font-weight: bold;\n    color: rgb(9, 79, 137);\n    font-size: 30px;\n    &:hover {\n      background-color: black;\n      color: white;\n    }\n  }\n`;\nexport const InputStyled = styled.input`\n   {\n    font-size: 18px;\n    font-weight: bold;\n    height: 40px;\n    border-radius: 15px;\n    outline: none;\n  }\n`;\nexport const LabelStyled = styled.label`\n   {\n    display: flex;\n    flex-direction: column;\n    justify-content: center;\n    alignitems: center;\n  }\n`;\nexport const Headers = styled.h1`\n   {\n    font-size: 60px;\n  }\n`;\n\n\n","import { LoginOutlined } from '@ant-design/icons/lib/icons';\nimport {\n  ButtonStyled,\n  FormStyled,\n  InputStyled,\n  LabelStyled,\n} from 'components/ContactForm/ContactForm.Styled';\nimport { useState } from 'react';\nimport { useDispatch } from 'react-redux';\nimport { register } from 'redux/authSlice';\n\nconst Register = () => {\n  const [name, setName] = useState('');\n  const [email, setEmail] = useState('');\n  const [password, setPassword] = useState('');\n  const dispatch = useDispatch();\n  const submitHendler = e => {\n    e.preventDefault();\n    dispatch(register({ name, email, password }));\n    setName('');\n    setEmail('');\n    setPassword('');\n  };\n  return (\n    <FormStyled onSubmit={submitHendler}>\n      <LabelStyled htmlFor=\"name\">\n        <span>Name:</span>\n        <InputStyled\n          type=\"text\"\n          name=\"name\"\n          value={name}\n          onChange={e => setName(e.currentTarget.value)}\n        />\n      </LabelStyled>\n      <LabelStyled htmlFor=\"email\">\n        <span>Email:</span>\n        <InputStyled\n          type=\"email\"\n          name=\"email\"\n          value={email}\n          onChange={e => setEmail(e.currentTarget.value)}\n        ></InputStyled>\n      </LabelStyled>\n      <LabelStyled htmlFor=\"password\">\n        <span>Password:</span>\n        <InputStyled\n          type=\"password\"\n          name=\"password\"\n          value={password}\n          onChange={e => setPassword(e.currentTarget.value)}\n        ></InputStyled>\n      </LabelStyled>\n      <ButtonStyled type=\"submit\">\n        <LoginOutlined />\n        Register\n      </ButtonStyled>\n    </FormStyled>\n  );\n};\nexport default Register;\n"],"names":["FormStyled","styled","_templateObject","_taggedTemplateLiteral","ButtonStyled","_templateObject2","InputStyled","_templateObject3","LabelStyled","_templateObject4","_templateObject5","_useState","useState","_useState2","_slicedToArray","name","setName","_useState3","_useState4","email","setEmail","_useState5","_useState6","password","setPassword","dispatch","useDispatch","_jsxs","onSubmit","e","preventDefault","register","children","htmlFor","_jsx","type","value","onChange","currentTarget","LoginOutlined"],"sourceRoot":""}